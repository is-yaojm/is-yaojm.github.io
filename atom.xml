<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小姚同学今天学习了吗</title>
  
  
  <link href="http://is-yaojm.github.io/atom.xml" rel="self"/>
  
  <link href="http://is-yaojm.github.io/"/>
  <updated>2022-04-11T02:57:10.713Z</updated>
  <id>http://is-yaojm.github.io/</id>
  
  <author>
    <name>Yaojm</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Algorithm-二叉树</title>
    <link href="http://is-yaojm.github.io/2022/04/11/Algorithm-%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://is-yaojm.github.io/2022/04/11/Algorithm-%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2022-04-11T02:41:13.000Z</published>
    <updated>2022-04-11T02:57:10.713Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-二叉树基础"><a href="#1-二叉树基础" class="headerlink" title="1 二叉树基础"></a>1 二叉树基础</h2><h3 id="1-1-二叉树的种类"><a href="#1-1-二叉树的种类" class="headerlink" title="1.1 二叉树的种类"></a>1.1 二叉树的种类</h3><h4 id="1-1-1-满二叉树"><a href="#1-1-1-满二叉树" class="headerlink" title="1.1.1 满二叉树"></a>1.1.1 满二叉树</h4><blockquote><p>如果一棵二叉树只有度为0和度为2的结点，且度为0的结点在同一层，则这颗树为满二叉树。<br><img src="tree.png" alt="满二叉树"><br>满二叉树：深度为k，有2^k-1个结点。</p></blockquote><h4 id="1-1-2-完全二叉树"><a href="#1-1-2-完全二叉树" class="headerlink" title="1.1.2 完全二叉树"></a>1.1.2 完全二叉树</h4><blockquote><p>完全二叉树：除底层结点可能没填满外，其余每层结点数都达到了最大值，且最下面一层的结点有右必有左，有左不一定有右。<br><img src="tree2.png" alt="完全二叉树"><br>完全二叉树：若最底层为第h层，则该层包含<code>1~2^(h-1)</code>个结点</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-二叉树基础&quot;&gt;&lt;a href=&quot;#1-二叉树基础&quot; class=&quot;headerlink&quot; title=&quot;1 二叉树基础&quot;&gt;&lt;/a&gt;1 二叉树基础&lt;/h2&gt;&lt;h3 id=&quot;1-1-二叉树的种类&quot;&gt;&lt;a href=&quot;#1-1-二叉树的种类&quot; class=&quot;head</summary>
      
    
    
    
    <category term="Algorithm" scheme="http://is-yaojm.github.io/categories/Algorithm/"/>
    
    
    <category term="Algorithm" scheme="http://is-yaojm.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>CSS_面试_经典布局方案</title>
    <link href="http://is-yaojm.github.io/2022/04/08/CSS-%E9%9D%A2%E8%AF%95-%E7%BB%8F%E5%85%B8%E5%B8%83%E5%B1%80%E6%96%B9%E6%A1%88/"/>
    <id>http://is-yaojm.github.io/2022/04/08/CSS-%E9%9D%A2%E8%AF%95-%E7%BB%8F%E5%85%B8%E5%B8%83%E5%B1%80%E6%96%B9%E6%A1%88/</id>
    <published>2022-04-08T06:26:22.000Z</published>
    <updated>2022-04-10T14:55:53.420Z</updated>
    
    
    
    
    <category term="CSS" scheme="http://is-yaojm.github.io/categories/CSS/"/>
    
    
    <category term="面试" scheme="http://is-yaojm.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>CSS_面试_盒子模型</title>
    <link href="http://is-yaojm.github.io/2022/04/08/CSS-%E9%9D%A2%E8%AF%95-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
    <id>http://is-yaojm.github.io/2022/04/08/CSS-%E9%9D%A2%E8%AF%95-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</id>
    <published>2022-04-08T06:25:05.000Z</published>
    <updated>2022-04-10T14:55:46.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS-盒子模型"><a href="#CSS-盒子模型" class="headerlink" title="CSS_盒子模型"></a>CSS_盒子模型</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSS-盒子模型&quot;&gt;&lt;a href=&quot;#CSS-盒子模型&quot; class=&quot;headerlink&quot; title=&quot;CSS_盒子模型&quot;&gt;&lt;/a&gt;CSS_盒子模型&lt;/h1&gt;</summary>
      
    
    
    
    <category term="CSS" scheme="http://is-yaojm.github.io/categories/CSS/"/>
    
    
    <category term="面试" scheme="http://is-yaojm.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>CSS_面试总结(1)</title>
    <link href="http://is-yaojm.github.io/2022/04/06/CSS_%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93(1)/"/>
    <id>http://is-yaojm.github.io/2022/04/06/CSS_%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93(1)/</id>
    <published>2022-04-06T14:25:32.000Z</published>
    <updated>2022-04-10T15:12:02.316Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-CSS元素隐藏的方式"><a href="#1-CSS元素隐藏的方式" class="headerlink" title="1 CSS元素隐藏的方式"></a>1 CSS元素隐藏的方式</h2><p><a href="https://www.sitepoint.com/hide-elements-in-css/">CSS隐藏的10种方式</a></p><h3 id="1-1-display-none"><a href="#1-1-display-none" class="headerlink" title="1.1 display:none"></a>1.1 display:none</h3><blockquote><p>通过CSS操作display，移除文档流，不保留</p></blockquote><ul><li>这种方式是我们最常用的隐藏页面元素的方式，它使元素完全不占控件，任何基于该元素的用户交互操作不会起任何作用，该元素的子孙元素也都会被隐藏。但是我们可以通过常用的dom操作方法访问到该元素。</li><li>为什么可以使用JS操作该元素？<ul><li>浏览器的渲染原理：浏览器会解析HTML标签生成DOMTree，解析CSS生成CSSOM，然后将DOMTree和CSSOM合成生成RenderTree，元素在RenderTree中对应0或多个盒子，然后浏览器以盒子模型的信息布局和渲染界面。而设置为display:none的元素则在RenderTree中没有生成对应的盒子模型，因此后续的布局、渲染工作自然没它什么事了，至于DOM操作还是可以的。</li></ul></li></ul><h3 id="1-2-visibility-hidden"><a href="#1-2-visibility-hidden" class="headerlink" title="1.2 visibility: hidden"></a>1.2 visibility: hidden</h3><blockquote><p>透明度为0，仍在文档流中，保留元素原来占有的位置。</p></blockquote><ul><li>这种方式区别于none的地方在于该元素依然在页面布局中起作用，它仍然占据着它原来的空间，该元素的子孙元素是可见的。 </li></ul><h3 id="1-3-opacity-0"><a href="#1-3-opacity-0" class="headerlink" title="1.3 opacity: 0;"></a>1.3 opacity: 0;</h3><blockquote><p>透明度为0，仍在文档流中，当作用于该元素的事件时仍有效。</p></blockquote><ul><li>opacity属性是用于设置元素的透明度的，当值为0时，该元素被隐藏，但它仍然在页面布局中起作用，但是它会影响部分页面交互操作，读屏软件能够读到该元素。</li></ul><h3 id="1-4-position-absolute-left-9999px"><a href="#1-4-position-absolute-left-9999px" class="headerlink" title="1.4 position: absolute; left: -9999px"></a>1.4 position: absolute; left: -9999px</h3><blockquote><p>绝对定位于当前页面的不可见位置。</p></blockquote><ul><li>position属性可以将该元素移除可视区域，不会影响布局，又可以让元素进行操作。</li></ul><h3 id="1-5-font-size-0"><a href="#1-5-font-size-0" class="headerlink" title="1.5 font-size: 0;"></a>1.5 font-size: 0;</h3><blockquote><p>字体大小设置为0.</p></blockquote><h2 id="2-CSS布局-position属性"><a href="#2-CSS布局-position属性" class="headerlink" title="2 CSS布局 - position属性"></a>2 CSS布局 - position属性</h2><blockquote><p><code>position</code>属性规定应用于元素的定位方法的类型。有五个不同的位置值：<code>static</code> , <code>relative</code> , <code>fixed</code> , <code>absolute</code> , <code>sticky</code>.</p></blockquote><blockquote><p>文档流：盒模型中的概念。它是在浏览器中的规则，块状元素的规则是从上到下排序的，行内元素从左到右排序。</p></blockquote><ul><li>脱离文档流的方案：<ul><li>float浮动；</li><li>position的absolute和fixed定位。</li></ul></li></ul><h3 id="2-1-position-static"><a href="#2-1-position-static" class="headerlink" title="2.1 position: static;"></a>2.1 position: static;</h3><blockquote><p>HTML元素默认情况下的定位方式是static(<strong>静态</strong>)。</p></blockquote><ul><li>静态定位的元素不受top、bottom、left和right属性的影响。它始终根据页面的正常流进行定位。</li></ul><h3 id="2-2-position-fixed"><a href="#2-2-position-fixed" class="headerlink" title="2.2 position: fixed;"></a>2.2 position: fixed;</h3><blockquote><p><strong>固定定位</strong>。使用该属性的元素是相对于浏览器窗口定位的，这意味着即使滚动页面，它也始终位于同一位置。 </p></blockquote><ul><li>Fixed定位在IE7和IE8以下需要描述<code>!DOCTYPE</code>才能支持。</li><li>Fixed定位使得元素的位置与文档流无关，因此不占据空间，它定位的元素可以和其他元素重叠。</li><li>固定定位适用场景：网站左右两侧的广告</li></ul><h3 id="2-3-position-relative"><a href="#2-3-position-relative" class="headerlink" title="2.3 position: relative;"></a>2.3 position: relative;</h3><blockquote><p>相对定位，元素相对于其<strong>正常位置</strong>进行定位。</p></blockquote><ul><li>设置相对定位的元素的top、right、botton和left属性将导致其偏离其正常位置进行调整。不会对其余内容进行调整来适应元素留下的任何空白。</li><li>移动相对定位元素，但它原本所占的空间不会改变。</li><li>相对定位元素常被用来作为绝对定位元素的容器块。</li></ul><h3 id="2-4-position-absolute"><a href="#2-4-position-absolute" class="headerlink" title="2.4 position: absolute;"></a>2.4 position: absolute;</h3><blockquote><p>绝对定位。绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于<code>&lt;html&gt;</code>。</p></blockquote><ul><li>绝对定位使元素的位置与文档流无关，因此不占据空间，该属性定位过的元素和其他元素重叠。</li></ul><h3 id="2-5-position-sticky"><a href="#2-5-position-sticky" class="headerlink" title="2.5 position: sticky;"></a>2.5 position: sticky;</h3><blockquote><p>粘性定位。基于用于的滚动位置来定位。</p></blockquote><ul><li>粘性定位的元素是依赖于用户的滚动，在<code>position:relative</code> 与 <code>position:fixed</code>定位之间切换。</li><li>它的行为就像<code>position:relative</code>。当页面滚动超出目标区域时，它的表现就像<code>position:fixed</code>，它会固定在目标位置。</li><li>元素定位表现为在<code>跨越特定阈值</code><strong>前</strong>为<strong>相对定位</strong>，之<strong>后</strong>为<strong>固定定位</strong>。</li><li>使用条件：<ul><li>父元素不能设置<code>overflow:hidden</code>或者<code>overflow:auto</code>属性；</li><li>必须指定四个方位值之一，否则只会处于相对定位；</li><li>父元素的高度不能低于<code>sticky</code>元素的高度；</li><li><code>sticky</code>元素仅在其父元素内生效。</li></ul></li><li>使用场景：<ul><li><a href="https://article.itxueyuan.com/rxXbJ1">粘性定位的几种妙用</a></li><li>常用的表头即将滚出可视区时吸附在顶部；</li><li>某些项目中需要把按钮固定在可视区域；</li><li>页脚固定；</li><li>侧边栏固定；</li><li>页面进度条等<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span><span class="selector-class">.sticky</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: -webkit-sticky;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: sticky;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#cae8ca</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#4CAF50</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>请试着在这个框架内<span class="tag">&lt;<span class="name">b</span>&gt;</span>滚动<span class="tag">&lt;/<span class="name">b</span>&gt;</span>页面，以理解粘性定位的原理。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sticky&quot;</span>&gt;</span>我是有粘性的！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding-bottom:2000px&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>在此例中，当您到达元素的滚动位置时，粘性元素将停留在页面顶部（top: 0）。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>向上滚动以消除粘性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>一些启用滚动的文本.. Lorem ipsum dolor sit amet, illum definitiones no quo, maluisset concludaturque et eum, altera fabulas ut quo. Atqui causae gloriatur ius te, id agam omnis evertitur eum. Affert laboramus repudiandae nec et. Inciderint efficiantur his ad. Eum no molestiae voluptatibus.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>一些启用滚动的文本.. Lorem ipsum dolor sit amet, illum definitiones no quo, maluisset concludaturque et eum, altera fabulas ut quo. Atqui causae gloriatur ius te, id agam omnis evertitur eum. Affert laboramus repudiandae nec et. Inciderint efficiantur his ad. Eum no molestiae voluptatibus.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="3-实现元素水平垂直居中的方法"><a href="#3-实现元素水平垂直居中的方法" class="headerlink" title="3 实现元素水平垂直居中的方法"></a>3 实现元素水平垂直居中的方法</h2><blockquote><p>元素是<code>行内元素</code>、<code>块状元素</code>及<code>不定宽高的块状元素</code>适用的方法是不同的。</p></blockquote><h3 id="3-1-text-align和-line-height"><a href="#3-1-text-align和-line-height" class="headerlink" title="3.1 text-align和 line-height"></a>3.1 text-align和 line-height</h3><blockquote><p>水平居中 : 给父元素设置文本center;</p><p>垂直居中 ：让文字的行高等于盒子的高度</p></blockquote><ul><li>只适用于行内元素。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.positions</span> &#123;</span><br><span class="line">     <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.positions</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">     <span class="attribute">line-height</span>:<span class="number">140px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-2-使用绝对定位和相对定位"><a href="#3-2-使用绝对定位和相对定位" class="headerlink" title="3.2 使用绝对定位和相对定位"></a>3.2 使用绝对定位和相对定位</h3><ul><li>若想三者都实现，偏移量需要自己计算； </li><li>已知宽高；<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 定位1：绝对定位和相对定位 */</span></span><br><span class="line"><span class="selector-class">.positions</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.positions</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">10.5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#block</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#b2</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-3-绝对定位-translate"><a href="#3-3-绝对定位-translate" class="headerlink" title="3.3 绝对定位+translate"></a>3.3 绝对定位+translate</h3><ul><li>行内元素,块元素,不定宽高的块状元素都可实现；</li><li>不需要计算偏移量；</li><li>有兼容性问题。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 定位2： */</span></span><br><span class="line"><span class="selector-class">.positions</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.positions</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#block</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#b2</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-4-设置top、left、right和bottom的值"><a href="#3-4-设置top、left、right和bottom的值" class="headerlink" title="3.4 设置top、left、right和bottom的值"></a>3.4 设置top、left、right和bottom的值</h3><ul><li>只有块元素可以实现;</li><li>必须知道具体的宽高；<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.positions</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.positions</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#block</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#b2</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-5-flex实现"><a href="#3-5-flex实现" class="headerlink" title="3.5 flex实现"></a>3.5 flex实现</h3><ul><li>父容器使用flex布局，使用<code>justify-content</code>和<code>align-items</code>，三者均可实现；<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* flex属性 */</span></span><br><span class="line"><span class="selector-class">.positions</span> &#123; </span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>问题：这种写法会到导致父容器中所有子元素都垂直居中。</li></ul><h3 id="3-6-flex布局-margin-auto"><a href="#3-6-flex布局-margin-auto" class="headerlink" title="3.6 flex布局 + margin:auto"></a>3.6 flex布局 + margin:auto</h3><ul><li>适用场景：指定父元素中的某个元素垂直居中，其他元素正常</li><li>给父元素设置<code>display: flex</code>，再给指定的子元素设置<code>margin: auto</code>;<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* flex-某一子元素垂直居中 */</span></span><br><span class="line"><span class="selector-class">.positions</span> &#123; </span><br><span class="line">    <span class="attribute">display</span>: flex; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.positions</span> <span class="selector-id">#block</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-7-display：table-cell实现"><a href="#3-7-display：table-cell实现" class="headerlink" title="3.7 display：table-cell实现"></a>3.7 display：table-cell实现</h3><ul><li>父元素必须要有固定宽高，百分比不可以;</li><li><code>display: table-cell;</code> : table布局；</li><li><code>vertical-align: middle;</code> : 垂直居中；</li><li><code>text-align: center;</code> : 水平居中。</li><li>对于块级元素要设置为行内块元素。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* display：table-cell实现 */</span></span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#block</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-z-index的工作原理"><a href="#4-z-index的工作原理" class="headerlink" title="4 z-index的工作原理"></a>4 z-index的工作原理</h2><ul><li><code>z-index</code>属性控制着元素在z轴上的表现形式。</li></ul><blockquote><p>z-index属性</p></blockquote><ul><li><code>z-index</code>属性指定两件事：<ul><li>当前元素的<strong>堆叠顺序</strong>；</li><li>当前元素是否建立<strong>新</strong>的<strong>堆叠上下文</strong>；</li></ul></li><li>适用范围：该属性适用于定位元素。即<code>position属性</code>值为：<code>relative</code>、<code>absolute</code>和<code>fixed</code>的元素。数值越大说明这个元素离电脑屏幕越近。<table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>auto</td><td>默认，堆叠顺序与父元素相等</td></tr><tr><td><code>&lt;integer&gt;</code></td><td>设置元素的堆叠顺序</td></tr><tr><td>inherit</td><td>规定应该从父元素继承z-index属性的值</td></tr></tbody></table></li></ul><blockquote><p>堆叠顺序</p></blockquote><ul><li>堆叠顺序是当前元素位于z轴上的值。数值越大表明元素的堆叠顺序越高，越靠近屏幕。默认情况下，文档中后来声明的元素具有更高的堆叠顺序。</li></ul><blockquote><p>应用</p></blockquote><ul><li>网页两侧的浮动窗口；</li><li>导航栏浮动置顶；</li><li>隐藏div实现弹窗功能。</li></ul><blockquote><p>层叠上下文 - <code>stacking contect</code></p></blockquote><ul><li><p>假定用户正面向(浏览器)视窗或网页，而HTML元素沿着其相对于用户的一条虚构的z轴排开，<code>层叠上下文</code>就是对这些<code>HTML元素</code>的一个<code>三维构想</code>。</p></li><li><p>总结</p><ul><li><p>层叠上下文可包含在其他层叠上下文中，并且一起创建一个层叠上下文的层级；</p></li><li><p>每个层叠上下文都完全独立于它的兄弟元素：当处理层叠时只考虑子元素；（存在数值大反而在底层的情况，因为处于不同的层叠上下文）</p></li><li><p>每个层叠上下文都是自包含的：当一个元素的内容发生层叠后，该元素将被作为整体在父级层叠上下文中按顺序进行层叠。</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/Stacking_without_z-index">1-没有z-index属性的堆叠</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/Adding_z-index">2-使用z-index</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context">3-层叠上下文</a>  ( z-index: 999 元素一定会置于 z-index: 0 元素之上吗?)</p></li></ul></li></ul><h2 id="5-CSS3-media查询"><a href="#5-CSS3-media查询" class="headerlink" title="5 CSS3 @media查询"></a>5 CSS3 @media查询</h2><blockquote><p>媒体查询</p></blockquote><ul><li><p>什么是媒体查询 ：<strong>媒体查询可以让CSS更加精确作用于不同的媒体类型和同一媒体的不同条件。</strong></p></li><li><p>JS监听媒体查询：<code>MediaQueryList.addListener(func)</code></p></li><li><p>使用<code>@media查询</code>，可以针对不同的媒体类型定义不同的样式；</p></li><li><p><code>@media</code>可以针对不同的屏幕尺寸设置不同的样式，特别是如果需要设置<strong>响应式的页面</strong>，<code>@media</code>是非常有用的。</p></li><li><p>当你重置浏览器大小的过程中，页面也会根据浏览器的高度重新渲染页面。</p></li><li><p>浏览器支持(支持@media规则的第一个版本号)</p><table><thead><tr><th>Rule</th><th>谷歌</th><th>IE</th><th>火狐</th><th>Safari</th><th>Opera</th></tr></thead><tbody><tr><td>@media</td><td>21</td><td>9</td><td>3.5</td><td>4.0</td><td>9</td></tr></tbody></table></li></ul><blockquote><p>媒体查询的用途</p></blockquote><ul><li><p>使用CSS@media和at规则有条件地应用样式；</p></li><li><p>使用该属性为<code>&lt;style&gt;</code>,<code>&lt;link&gt;</code>,<code>&lt;source&gt;</code>和其他HTML元素定位特定媒体；</p></li><li><p>使用JS方法测试和监控媒体状态。</p><p>  eg:</p>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">500px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.gridmenu</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.gridmain</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.gridright</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries">1-使用媒体查询</a></p><p>  <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaQueryList">2-媒体查询列表</a></p><p>  问题：<a href="https://blog.csdn.net/weixin_42339423/article/details/109607103">媒体查询以及js模拟实现媒体查询</a></p></li></ul><h2 id="CSS-reset样式重置"><a href="#CSS-reset样式重置" class="headerlink" title=".. CSS reset样式重置"></a>.. CSS reset样式重置</h2><ul><li>样式重置的原因：不同浏览器不同版本对于某一元素的默认样式设置可能不同，为了处理兼容性，所以使用样式重置。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-CSS元素隐藏的方式&quot;&gt;&lt;a href=&quot;#1-CSS元素隐藏的方式&quot; class=&quot;headerlink&quot; title=&quot;1 CSS元素隐藏的方式&quot;&gt;&lt;/a&gt;1 CSS元素隐藏的方式&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.sitepoint</summary>
      
    
    
    
    <category term="CSS" scheme="http://is-yaojm.github.io/categories/CSS/"/>
    
    
    <category term="面试" scheme="http://is-yaojm.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>HTML面试总结(1)</title>
    <link href="http://is-yaojm.github.io/2022/04/05/HTML%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93(1)/"/>
    <id>http://is-yaojm.github.io/2022/04/05/HTML%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93(1)/</id>
    <published>2022-04-05T00:14:42.000Z</published>
    <updated>2022-04-10T14:56:02.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-HTML面试总结-1"><a href="#一-HTML面试总结-1" class="headerlink" title="一 : HTML面试总结 (1)"></a>一 : HTML面试总结 (1)</h1><h2 id="1-标签语义化"><a href="#1-标签语义化" class="headerlink" title="1 标签语义化"></a>1 标签语义化</h2><blockquote><p>语义化： 通过这个标签的名称就可以知道这个标签的含义。</p></blockquote><h4 id="常见语义化标签："><a href="#常见语义化标签：" class="headerlink" title="常见语义化标签："></a>常见语义化标签：</h4><ul><li><p>html5新增的语义标签</p><ul><li>header, footer, nav, section, article, aside, details, summary,<br>dialog, figure, main, mark, time</li></ul></li><li><p>常见：</p><ul><li>h1/h2/h3/h4/h5</li><li>img</li><li>p</li><li>menu</li></ul></li></ul><blockquote><p>1.1 什么是标签语义化？</p></blockquote><p>答：语义化变迁就是具有语义的标签，它可以清晰地向我们展示它的作用和用途。</p><blockquote><p>1.2 常见的标签有哪些？都有什么含义？</p></blockquote><p>答：HTML将标签可分为三类：行内元素，块级元素和行内块元素。这三者可以使用dispaly属性进行转化。</p><ul><li>行内元素：内容撑开宽度，左右都是行内元素的可以排列在一行，无法对它设置宽和高，常见的行内块元素有<code>&lt;a&gt;</code>,<code>&lt;span&gt;</code>,<code>&lt;input&gt;</code>,<code>&lt;textarea&gt;</code>等。行内元素的设置方式：<code>display:inline</code>。</li><li>块级元素：可以自动换行，多个块级元素写在一起时默认排列方式为从上至下。常见的块级元素有：<code>&lt;h1&gt;-&lt;h5&gt;</code>,<code>&lt;p&gt;</code>,<code>&lt;div&gt;</code>,<code>&lt;nav&gt;</code>,<code>&lt;header&gt;</code>,<code>&lt;footer&gt;</code>等。块级元素的设置方式：<code>display:block</code>。</li><li>行内块元素：它综合了行内元素和块级元素的特性，不自动换行，可以设置宽高，默认排列方式为从左向右。行内块级元素的设置方式：<code>display:inline-block</code>。</li></ul><blockquote><p>1.3 display除<code>inline</code>，<code>block</code>和<code>inline-block</code>以外，还有什么值？有什么含义？</p></blockquote><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>该元素不会被显示</td></tr><tr><td>list-item</td><td>该元素会被作为列表显示</td></tr><tr><td>inherit</td><td>规定应该从父元素继承display属性的值</td></tr><tr><td>flex</td><td>CSS3引入的新的布局模式，弹性盒模型</td></tr></tbody></table><blockquote><p>1.4 让元素隐藏的方式，除了display:none外，还有什么方式？</p></blockquote><p>答：还有visibility，opacity和position。</p><h2 id="2-对HTML5的理解"><a href="#2-对HTML5的理解" class="headerlink" title="2 对HTML5的理解"></a>2 对HTML5的理解</h2><p>答： HTML5是新一代的HTML，相比之前的版本做了如下改动：</p><ul><li>良好的移动性，以移动端设备为主；</li><li>增加了响应式设计，以适应自动变化的屏幕尺寸；</li><li>支持离线缓存技术，webStorage本地缓存；</li><li>增加了canvas，video，audio等新标签元素；</li><li>新增特殊的内容元素：article ,footer ,header,nav ,section等；</li><li>新增表单控件：calendar，date，time，email，url，search等；</li><li>地理定位功能；</li><li>新增webSocket/webWork技术。</li></ul><h2 id="3-常见标签分类"><a href="#3-常见标签分类" class="headerlink" title="3 常见标签分类"></a>3 常见标签分类</h2><h3 id="3-1-行内元素"><a href="#3-1-行内元素" class="headerlink" title="3.1 行内元素"></a>3.1 行内元素</h3><blockquote><p>行内元素：内容撑开宽度，左右都是行内元素的可以排列在一行，无法对它设置宽和高.</p></blockquote><ul><li>常见的行内块元素有<code>&lt;a&gt;</code>,<code>&lt;span&gt;</code>,<code>&lt;input&gt;</code>,<code>&lt;textarea&gt;</code>等。</li><li>行内元素的设置方式：<code>display:inline</code>。<h3 id="3-2-块级元素"><a href="#3-2-块级元素" class="headerlink" title="3.2 块级元素"></a>3.2 块级元素</h3><blockquote><p>块级元素：可以自动换行，多个块级元素写在一起时默认排列方式为从上至下。</p></blockquote></li><li>常见的块级元素有：<code>&lt;h1&gt;-&lt;h5&gt;</code>,<code>&lt;p&gt;</code>,<code>&lt;div&gt;</code>,<code>&lt;nav&gt;</code>,<code>&lt;header&gt;</code>,<code>&lt;footer&gt;</code>等。</li><li>块级元素的设置方式：<code>display:block</code>。<h3 id="3-1-行内块元素"><a href="#3-1-行内块元素" class="headerlink" title="3.1 行内块元素"></a>3.1 行内块元素</h3><blockquote><p>行内块元素：它综合了行内元素和块级元素的特性，不自动换行，可以设置宽高，默认排列方式为从左向右。</p></blockquote></li><li>行内块级元素的设置方式：<code>display:inline-block</code>。</li></ul><h2 id="4-其他"><a href="#4-其他" class="headerlink" title="4 其他"></a>4 其他</h2><h3 id="4-1-HTML状态码"><a href="#4-1-HTML状态码" class="headerlink" title="4.1 HTML状态码"></a>4.1 HTML状态码</h3><blockquote><p>当用户浏览一个网页时，浏览器会向网页所在的服务器发出请求。当浏览器接收并显示王爷前，此网页所在的服务器会返回一个包含HTTP状态码的信息头用以响应浏览器的请求。</p></blockquote><p><a href="https://www.runoob.com/http/http-status-codes.html">HTTP状态码 - 菜鸟教程</a></p><h4 id="常见状态码分类"><a href="#常见状态码分类" class="headerlink" title="常见状态码分类:"></a>常见状态码分类:</h4><ul><li>1** ： 信息，服务器收到请求，需要请求者继续执行操作；</li><li>2** ： 成功；</li><li>3** ： 重定向，需要进一步的操作完成请求；</li><li>4** ： 客户端错误；</li><li>5** ： 服务器端错误； <h4 id="常见状态码："><a href="#常见状态码：" class="headerlink" title="常见状态码："></a>常见状态码：</h4></li><li><code>200 - OK</code> ：请求成功，一般用于get和post请求；</li><li><code>301 - Moved Permanently</code> ：永久重定向，网页被永久转移到其他URL；</li><li><code>302 - Found </code> ：临时重定向，资源只是临时被移动，客户端继续使用原有的URL；</li><li><code>304 - Not Modified</code> ： 缓存，未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源；</li><li><code>403 - Forbidden</code> ： 一般是参数传递时有问题；</li><li><code>404 - Not Found</code> ： 找不到资源，请求的资源/网页等不存在；</li><li><code>500 - Internal Server Error</code> ： 内部服务器错误，无法完成请求；</li></ul><h3 id="4-2-关于URL编码-（URL-Encode）"><a href="#4-2-关于URL编码-（URL-Encode）" class="headerlink" title="4.2 关于URL编码 （URL Encode）"></a>4.2 关于URL编码 （URL Encode）</h3><blockquote><p>URL就是网址，URL只能由字母、数字、一些特殊符号组成<code>$-_.+!*&#39;(),</code>、以及某些保留字来组成。</p></blockquote><p><a href="http://www.ruanyifeng.com/blog/2010/02/url_encoding.html">关于URL编码</a></p><h3 id="4-3-HTML中的input标签的type"><a href="#4-3-HTML中的input标签的type" class="headerlink" title="4.3 HTML中的input标签的type"></a>4.3 HTML中的input标签的type</h3><blockquote><p>input标签： 用于搜集用户信息，根据不同的type属性值，输入字段拥有很多种形式。</p></blockquote><ul><li>HTML5中增加的新类型：<ul><li>color、date、datetime、datetime-local、month、week、time、email、number、range、search、tel 和 url。</li><li>语法：<code>&lt;input type=&quot; value &quot;&gt;</code></li></ul></li></ul><table><thead><tr><th>type值</th><th>含义</th></tr></thead><tbody><tr><td>color</td><td>定义拾色器。</td></tr><tr><td>date</td><td>定义 date 控件（包括年、月、日，不包括时间）。</td></tr><tr><td>datetime</td><td>定义 date 和 time 控件（包括年、月、日、时、分、秒、几分之一秒，基于 UTC 时区）。</td></tr><tr><td>datetime-local</td><td>定义 date 和 time 控件（包括年、月、日、时、分、秒、几分之一秒，不带时区）。</td></tr><tr><td>email</td><td>定义用于 e-mail 地址的字段。</td></tr><tr><td>month</td><td>定义 month 和 year 控件（不带时区）。</td></tr><tr><td>number</td><td>定义用于输入数字的字段。</td></tr><tr><td>range</td><td>定义用于精确值不重要的输入数字的控件（比如 slider 控件）。</td></tr><tr><td>search</td><td>定义用于输入搜索字符串的文本字段。</td></tr><tr><td>tel</td><td>定义用于输入电话号码的字段。</td></tr><tr><td>time</td><td>定义用于输入时间的控件（不带时区）。</td></tr><tr><td>url</td><td>定义用于输入 URL 的字段。</td></tr><tr><td>week</td><td>定义 week 和 year 控件（不带时区）。</td></tr></tbody></table><ul><li>常见：<ul><li>text(默认) ：文本框</li><li>password：密码框</li><li>checkbox：多选框</li><li>radio：单选框</li><li>submit：提交按钮,  reset：重置按钮, image：图片按钮, button：普通按钮</li><li>file：选择文件的控件</li><li>search：搜索框</li><li>hidden： 不显示的控件</li></ul></li></ul><h3 id="4-4-Data-URL"><a href="#4-4-Data-URL" class="headerlink" title="4.4 Data URL"></a>4.4 Data URL</h3><ol><li><p>什么是Data URL</p><blockquote><p>Data URL是将图片转换为base64直接嵌入到网页中，使用<code>&lt;img src=&quot;data:[MIME type];base64&quot;/&gt;</code>这种方式引用图片，不需要再发送请求获取图片。</p></blockquote></li><li><p>Data URL能用在很多场合，跟传统的外部资源引用方式相比，它独有的用处：</p><ol><li>当访问外部资源很麻烦或受限时；</li><li>当图片是在服务器端用程序动态生成，每个访问用户显示的都不同时；</li><li>当图片的体积太小，占用一个http会话不是很值得时；</li></ol></li><li><p>Data URL缺点：</p><ol><li>base64编码后的图片会比原来的体积大三分之一左右；</li><li>Data URL形式的图片不会被缓存下来，每次访问页面都要被下载一次。</li></ol></li><li><p>优化方法：在CSS里使用Data URL</p></li></ol><p><a href="https://www.cnblogs.com/xuechenlei/p/5940371.html">Data URL简介及利弊</a></p><h3 id="4-5-重排和重绘"><a href="#4-5-重排和重绘" class="headerlink" title="4.5 重排和重绘"></a>4.5 重排和重绘</h3><p><code>重排</code>和<code>重绘</code>是<code>关键渲染路径</code>中的两步。<strong>重排必定会造成重绘</strong>。</p><blockquote><p>重排-Reflow ： 元素的<code>位置发生变动</code>时发生<code>重排</code>。</p></blockquote><ul><li>重排在关键渲染路径中的Layout阶段，计算每一个元素在设备视口内的确切位置和大小。当一个元素位置发生变化时，其父元素及其后边的元素位置都可能发生变化，代价极高。</li></ul><blockquote><p>重绘-Repaint： 元素的<code>样式发生变动</code>时，但位置没有发生变化。</p></blockquote><ul><li><p>重绘在关键渲染路径中的Paint阶段，将渲染树中的每个节点转换成屏幕上的实际像素，这一步通常称为绘制或栅格化。</p></li><li><p>避免过多重排重绘的方法：</p><ul><li>使用<code>DocumentFragment</code>进行Dom操作；</li><li>CSS样式尽量批量修改；</li><li>避免使用table布局；</li><li>为元素提前设置好高宽，不因多次渲染而改变位置。</li></ul></li></ul><p><a href="https://www.cnblogs.com/soyxiaobi/p/9963019.html">前端性能优化之重排重绘</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-HTML面试总结-1&quot;&gt;&lt;a href=&quot;#一-HTML面试总结-1&quot; class=&quot;headerlink&quot; title=&quot;一 : HTML面试总结 (1)&quot;&gt;&lt;/a&gt;一 : HTML面试总结 (1)&lt;/h1&gt;&lt;h2 id=&quot;1-标签语义化&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="HTML" scheme="http://is-yaojm.github.io/categories/HTML/"/>
    
    
    <category term="面试" scheme="http://is-yaojm.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://is-yaojm.github.io/2022/03/10/hello-world/"/>
    <id>http://is-yaojm.github.io/2022/03/10/hello-world/</id>
    <published>2022-03-10T13:59:09.299Z</published>
    <updated>2022-03-10T13:56:46.826Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
